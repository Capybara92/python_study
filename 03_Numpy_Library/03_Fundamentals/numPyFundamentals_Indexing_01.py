#단일 요소 인덱싱
#Python 시퀀스와 똑같이 작동한다. 0부터 시작하며 배열 끝에서 인덱싱 할 음수 인덱스를 허용한다.

import numpy as np
x = np.arange(10)

print(x[2])
print(x[-2])

#목록 및 튜플과 달리 numpy배열은 다차원 배열에 대한 다차원 인덱싱을 지원합니다. 
#즉, 각 차원의 색인을 자체 대괄호 집합으로 분리 할 필요가 없습니다.

x.shape = (2,5) # now x is 2-dimensional

print(x[1,3])
print(x[1,-1])

#차원보다 적은 인덱스를 사용하여 다차원 배열을 인덱싱하면 하위 차원 배열을 얻는다.
print(x[0])
#반환 된 배열은 원본의 복사본이 아니라 원본 배열과 동일한 메모리 값을 가리킨다.
#이 경우 첫 번째 위치(0)에있는 1차원 배열이 반환된다.

print(x[0][2])
#이 경우는 첫 번째 인덱스 이후에 2로 인덱싱되어 새 임시 배열이 생성되므로 더 비효율적이다. x[0,2] = x[0][2]

'''
※※※
인덱싱과 관련하여 IDL 또는 Fortran 메모리 순서에 사용되는 항목에 유의하자.
NumPy는 C순서 인덱싱을 사용한다.
즉, 첫 번째 인덱스가 메모리에서 가장 빠르게 변화하는 위치를 나타내는 Fortran 또는 IDL과 달리 
마지막 인덱스는 일반적으로 가장 빠르게 변화하는 메모리 위치를 나타낸다.
이 차이는 혼란을 일으킬 수있는 큰 가능성을 나타낸다.
'''
