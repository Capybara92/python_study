#플롯의 수명주기

#이 튜토리얼은 Matplotlib를 사용하여 단일 시각화의 시작, 중간, 끝을 표시하는 것을 목표로한다.
#원시 데이터로 시작하여 사용자 지정 시각화 그림을 저장하는 것으로 끝닌다.
#그 과정에서 Matplotlib를 사용하여 몇 가지 깔끔한 기능과 모범사례를 강조하려고 힌다.

#객체 지향 API와 Pyplot에 대한 참고 사항
#Matplotlib에는 두 개의 인터페이스가 있습니다.
#첫 번째는 객체 지향 인터페이스입니다.
#   -> 인스턴스 axes.Axes 에서 시각화를 렌더링하기 위해의 matplotlib.figure.Figure의 인스턴스를 사용합니다.
#두 번째는 MATLAB을 기반으로하며 상태 기반 인터페이스를 사용합니다.
#   ->  matplotlib.pyplot모듈에 캡슐화된다.

#대부분의 용어는 간단하지만 기억해야 할 주요사항은 다음과 같다.
#   - Figure는 하나 이상의 축을 포함 할 수있는 최종 이미지.
#   - 축은 개별 플롯을 나타냅니다. (플롯의 x / y 축을 나타내는 "축"이라는 단어와 혼동하지 말것)
#Axes에서 직접 플로팅을 수행하는 메서드를 호출하여 플롯을 사용자정의할 때 훨씬 더 많은 유연성과 성능을 제공한다.
#일반적으로 pyplot 인터페이스를 통해 객체 지향 인터페이스를 사용하십시오.
