#크기
'''
#size속성을 통해 이미지 크기를 읽을 수 있다.
#수평 및 수직 크기를 픽셀 단위로 포함하는 2-튜플이다.
'''

#좌표계
'''
#Python Imaging Library는 왼쪽 상단 모서리에 (0,0)이있는 데카르트 픽셀 좌표계를 사용한다.
#좌표는 함축된 픽셀 모서리를 나타낸다.
#(0, 0)으로 주소가 지정된 픽셀의 중심은 실제로 (0.5, 0.5)에 있다.

#좌표는 일반적으로 2-튜플(x, y)로 라이브러리에 전달된다.
#직사각형은 4개의 튜플로 표시되며 왼쪽 상단 모서리가 먼저 지정된다.
#예를 들어, 800x600 픽셀 이미지를 모두 덮는 직사각형은 (0, 0, 800, 600)으로 기록된다.
'''

#팔레트
'''
팔레트모드(P)는 색상팔레트를 사용하여 각 픽셀의 실제 색상을 정의한다.
'''

#정보
'''
#info속성을 사용하여 이미지에 보조정보를 첨부할 수 있다.
#이것은 사전 객체이다.

#이미지 파일을 로드하고 저장할 때 이러한 정보를 처리하는 방법은 파일형식 처리기에 달려 있다. 
#대부분의 핸들러 info는 이미지를 로드할 때 속성에 속성을 추가하지만 이미지를 저장할 때는 무시한다.
'''

#정위
'''
#infoJPG 및 TIFF이미지 속성의 공통 요소는 EXIF ​​방향태그이다.
#이미지 데이터의 방향을 지정하는 방법에 대한 지침이다.
#예를 들어, 이미지를 90도 회전하거나 미러링하도록 지시할 수 있다.
#이 정보를 이미지에 적용하려면 exif_transpose()를 사용한다.
'''

#필터
'''
#여러입력 픽셀을 단일출력 픽셀에 매핑할 수 있는 지오메트리 작업의 경우 Python Imaging Library는 다양한 리샘플링 필터를 제공한다.
    PIL.Image.NEAREST       (입력 이미지에서 가장 가까운 픽셀 하나를 선택한다. 다른 모든 입력픽셀은 무시한다.)
    PIL.Image.BOX           (소스 이미지의 각 픽셀은 동일한 가중치를 가진 대상 이미지의 한 픽셀에 기여한다. 업 스케일링의 경우 NEAREST를 쓴다.
                             이 필터는 resize() 및 thumbnail()메서드에서만 사용할 수 있다.
                             버전 3.4.0부터 기능)
    PIL.Image.BILINEAR      (크기조정을 위해 출력값에 기여할 수 있는 모든 픽셀에서 선형보간을 사용하여 출력 픽셀값을 계산한다.
                             다른변환의 경우 입력이미지의 2x2환경에 대한 선형보간이 사용된다.)
    PIL.Image.HAMMING       (BILINEAR보다 선명한 이미지를 생성하고 BOX와 같이 로컬수준의 전위가 없다.
                             이 필터는 resize() 및 thumbnail()메서드에서만 사용할 수 있다.
                             버전 3.4.0부터 기능)
    PIL.Image.BICUBIC       (크기조정을 위해 출력값에 기여할 수 있는 모든 픽셀에서 3차보간을 사용하여 출력 픽셀 값을 계산한다.
                             다른변환의 경우 입력이미지의 4x4환경에 대한 큐빅보간이 사용된다.)
    PIL.Image.LANCZOS       (출력 값에 기여할 수 있는 모든 픽셀에서 고품질 Lanczos필터(a truncated sinc)를 사용하여 출력 픽셀 값을 계산한다.
                             이 필터는 resize() 및 thumbnail()메서드에서만 사용할 수 있다.
                             버전 1.1.3부터 기능)             
'''
